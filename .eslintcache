[{"/Users/adityanayak/myproject/src/index.js":"1","/Users/adityanayak/myproject/src/App.js":"2","/Users/adityanayak/myproject/src/firebase.js":"3","/Users/adityanayak/myproject/src/InstaEmbed.js":"4","/Users/adityanayak/myproject/src/Post.js":"5","/Users/adityanayak/myproject/src/Story.js":"6","/Users/adityanayak/myproject/src/ImageUpload.js":"7","/Users/adityanayak/myproject/src/Suggested.js":"8","/Users/adityanayak/myproject/src/serviceWorker.js":"9"},{"size":502,"mtime":1611933042948,"results":"10","hashOfConfig":"11"},{"size":8999,"mtime":1611942568961,"results":"12","hashOfConfig":"11"},{"size":591,"mtime":1611929138210,"results":"13","hashOfConfig":"11"},{"size":2737,"mtime":1612021127685,"results":"14","hashOfConfig":"11"},{"size":4079,"mtime":1611928153005,"results":"15","hashOfConfig":"11"},{"size":2216,"mtime":1612021127686,"results":"16","hashOfConfig":"11"},{"size":3939,"mtime":1612019417098,"results":"17","hashOfConfig":"11"},{"size":4731,"mtime":1612021127683,"results":"18","hashOfConfig":"11"},{"size":5086,"mtime":1611928157045,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rkaajt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/adityanayak/myproject/src/index.js",[],["42","43"],"/Users/adityanayak/myproject/src/App.js",["44","45"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport Story from \"./Story\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { auth, db } from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Input } from \"@material-ui/core\";\nimport FlipMove from \"react-flip-move\";\n\nimport InstaEmbed from \"./InstaEmbed\";\nimport Suggested from \"./Suggested\";\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport NearMeOutlinedIcon from '@material-ui/icons/NearMeOutlined';\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\nimport ImageUpload from './ImageUpload';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 280,\n    height: 360,\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user has logged in...\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot((snapshot) => {\n      setPosts(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          post: doc.data(),\n        }))\n      );\n    });\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img\n                className=\"modal__headerImage\"\n                src=\"/images/logo.png\"\n                alt=\"Mumble\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"signup_input\"\n            />\n            <Input\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"signup_input\"\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"signup_input\"\n            />\n            <Button type=\"submit\" onClick={signUp} variant=\"contained\" color=\"secondary\">\n              Sign Up\n            </Button>\n\n            <div className=\"signInLabel\">\n              <img\n                className=\"modal__headerImage\"\n                src=\"https://i.pinimg.com/originals/8a/77/05/8a770507298d728a1e3e039a0507dd8e.png\"\n                alt=\"Mumble\"\n                className = \"signInLabelImg\"\n              />\n              <p className = \"signInLabelText\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem Sed ut perspiciatis unde omnis iste natus error ut perspiciatis unde omnis iste natus error </p>\n            </div>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img\n                className=\"modal__headerImage\"\n                src=\"/images/logo.png\"\n                alt=\"Mumble\"\n              />\n            </center>\n\n            <Input\n              type=\"text\"\n              placeholder=\"Email ID\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"signup_input\"\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"signup_input\"\n            />\n\n            <Button type=\"submit\" onClick={signIn} variant=\"contained\" color=\"secondary\">\n              Sign In\n            </Button>\n\n            <div className=\"signInLabel\">\n              <img\n                className=\"modal__headerImage\"\n                src=\"https://i.pinimg.com/originals/8a/77/05/8a770507298d728a1e3e039a0507dd8e.png\"\n                alt=\"mummble\"\n                className = \"signInLabelImg\"\n              />\n              <p className = \"signInLabelText\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem Sed ut perspiciatis unde omnis iste natus error ut perspiciatis unde omnis iste natus error </p>\n            </div>      \n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"/images/logo.png\"\n          alt=\"mumble\"\n        />\n\n        <div className=\"searchForm\">\n          <form>\n            <SearchIcon className=\"searchIcon\" fontSize=\"small\" />\n            <input type=\"text\" id=\"filter\" placeholder=\"Search\" className=\"searchBarInput\"/>\n          </form>\n        </div>\n\n        <div className=\"header_icons\">\n          <HomeIcon fontSize=\"large\" className=\"header_icon\"/>\n          <a href=\"https://realtime-gyan-chat-app.herokuapp.com/\"><NearMeOutlinedIcon fontSize=\"large\" className=\"header_icon\" /></a>\n          <ExploreOutlinedIcon fontSize=\"large\" className=\"header_icon\"/>\n          <FavoriteBorderOutlinedIcon fontSize=\"large\" className=\"header_icon\" />\n        </div>\n\n        <div className=\"signupButton\" >\n          {user ? (\n            <Button onClick={() => auth.signOut()} \n            variant=\"contained\" color=\"secondary\" className=\"signOutButton\">Logout</Button>\n          ) : (\n            <div className=\"app__loginContainer\">\n              <Button onClick={() => setOpenSignIn(true)} className=\"signInButton\" color=\"secondary\">Sign In</Button>\n              <Button onClick={() => setOpen(true)} variant=\"contained\" color=\"secondary\">Sign Up</Button>\n            </div>\n          )}\n        </div>\n      </div>\n      <InstaEmbed />\n\n      <Suggested />\n\n      <Story />\n      \n      { user?.displayName ? (\n        <ImageUpload username = {user.displayName} />\n      ) : (\n      <div className=\"upload_message\" >\n        <h3>Login to Create a Post 🚀 !!!</h3>\n        <p><b>Welcome to Instagram Clone App!</b> To Create a new Post, the user has to sign up for the apllication first using any mail ID (Works with an Invalid Mail ID too). For example : \"xyz@gmail.com\". User can Sign-In using the same credentials again and again. <br /><br />\n        <b>For Creating a Post</b> you need to sign-in first. Then click the \"UPLOAD PHOTO\" Button. Select a Photo from your device, add a suitable caption to the Post, and then click \"CREATE POST\" Button. Wait till the photo gets uploaded. And then BOOM!!! Your Post has been created(Scroll a bit if you don't find your post at the top).\n        <br /><br />\n        <b>Hope you have a Great time exploring the Application 💖 !!!</b>\n        </p>\n        <Button onClick={() => setOpenSignIn(true)} className=\"upload_signInButton\" color=\"secondary\" variant=\"contained\" >Sign In</Button>\n\n      </div>\n        \n      )}\n      \n        <FlipMove>\n      {posts.map(({ id, post }) => (\n        <Post\n          key={id}\n          postId = {id}\n          username={post.username}\n          caption={post.caption}\n          imageUrl={post.imageUrl}\n          avatar={post.avatar}\n          user = {user}\n        />\n      ))}\n\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;","/Users/adityanayak/myproject/src/firebase.js",[],"/Users/adityanayak/myproject/src/InstaEmbed.js",["46","47"],"/Users/adityanayak/myproject/src/Post.js",["48","49"],"import React, { useState, useEffect } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport \"./Post.css\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport NearMeOutlinedIcon from \"@material-ui/icons/NearMeOutlined\";\nimport { db } from \"./firebase\";\n\nimport TurnedInNotOutlinedIcon from \"@material-ui/icons/TurnedInNotOutlined\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport firebase from \"firebase\";\n\nfunction Post({ username, caption, imageUrl, postId, user }) {\n  const [comments, SetComments] = useState([]);\n  const [comment, SetComment] = useState(\"\");\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          SetComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = (event) => {\n    event.preventDefault();\n\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    SetComment(\"\");\n  };\n\n  const avatars = [\n    {\n      ava:\n        \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n    },\n    {\n      ava:\n        \"https://images.unsplash.com/photo-1518806118471-f28b20a1d79d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n    },\n    {\n      ava:\n        \"https://meetanentrepreneur.lu/wp-content/uploads/2019/08/profil-linkedin.jpg\",\n    },\n    {\n      ava:\n        \"https://i.pinimg.com/originals/76/80/4f/76804f67ba38f85e4802d250e5b15504.jpg\",\n    },\n    {\n      ava:\n        \"https://i.pinimg.com/originals/34/f2/50/34f250635ed02218356595ea6d730518.jpg\",\n    },\n  ];\n\n  const [avatar, setAvatar] = useState(0);\n\n  const randomAvatar = (e) => {\n    const len = avatars.length;\n    setAvatar(Math.floor(Math.random() * len));\n  };\n\n  return (\n    <div className=\"post\">\n      {/* header => avatar + username */}\n      <div className=\"post__header\">\n        <Avatar\n          className=\"post__avatar\"\n          alt=\"subhampreet\"\n          src={avatars[avatar].ava}\n        />\n\n        <h3>{username}</h3>\n        <div className=\"MoreHorizIcon\">\n          <MoreHorizIcon />\n        </div>\n      </div>\n\n      {/* Image */}\n      <img className=\"post__image\" src={imageUrl} />\n\n      {/* POST ICONS */}\n\n      <div className=\"likeShare\">\n        <FavoriteBorderIcon className=\"likeShare-item\" fontSize=\"medium\" />\n        <ModeCommentOutlinedIcon className=\"likeShare-item\" fontSize=\"medium\" />\n        <NearMeOutlinedIcon className=\"likeShare-item\" fontSize=\"medium\" />\n        <TurnedInNotOutlinedIcon\n          className=\"likeShare-item-save\"\n          fontSize=\"medium\"\n        />\n      </div>\n\n      {/* username + caption */}\n      <h5 className=\"post__text\">\n        {\" \"}\n        <strong>{username} </strong>\n        {caption}\n      </h5>\n\n      {/* COMMENTS */}\n\n      <div className=\"post_comments\">\n        {comments.map((comment) => (\n          <h5 className=\"comment\">\n            <strong>{comment.username}</strong> {comment.text}\n          </h5>\n        ))}\n      </div>\n\n      {/* POST CAPTIONS */}\n\n      {user && (\n        <form className=\"postComment_Box\">\n          <input\n            className=\"comment_input\"\n            type=\"text\"\n            placeholder=\"Add a comment...\"\n            value={comment}\n            onChange={(e) => SetComment(e.target.value)}\n          />\n          <Button\n            color=\"secondary\"\n            className=\"comment_button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </Button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n","/Users/adityanayak/myproject/src/Story.js",["50","51","52","53","54","55"],"/Users/adityanayak/myproject/src/ImageUpload.js",["56","57"],"import React, { useState } from \"react\";\nimport { storage, db } from \"./firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"firebase\";\nimport \"./ImageUpload.css\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nimport { Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  large: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n  \n}));\n\nexport default function ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [caption, setCaption] = useState(\"\");\n\n  const handleChange = (e) => {\n    const file = e.target.files[0];\n\n    if (file) {\n      const fileType = file[\"type\"];\n      const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\n      if (validImageTypes.includes(fileType)) {\n        setError(\"\");\n        setImage(file);\n      } else {\n        console.log(\"error\");\n        setError(\"error please upload a image file\");\n      }\n    }\n  };\n\n  const handleUpload = () => {\n    if (image) {\n      // add to image folder in firebase\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      // Listen for state changes, errors, and completion of the upload.\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          // error function ....\n          console.log(error);\n          setError(error);\n        },\n        () => {\n          // complete function ....\n          storage\n            .ref(\"images\")\n            .child(image.name) // Upload the file and metadata\n            .getDownloadURL() // get download url\n            .then((url) => {\n              setUrl(url);\n              db.collection(\"posts\").add({\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                caption: caption,\n                imageUrl: url,\n                username: username,\n              });\n              setProgress(0);\n              setCaption(\"\");\n              setImage(null);\n            });\n          }\n      );\n    }\n    else {\n      setError(\"Error please choose an image to upload\");\n    }\n  };\n\n    const classes = useStyles();\n\n  const fileInputRef = React.createRef();\n\n\n  return (\n    <div className=\"upload\">\n      <div className=\"upload_first\">\n        <Avatar\n          className=\"post__avatar\"\n          alt=\"AdityaNayak\"\n          src=\"./images/avatar1.jpg\"\n          className = {classes.large}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          value={caption}\n          onChange={(event) => setCaption(event.target.value)}\n          className=\"upload_caption\"\n        />\n      </div>\n\n\n      <div className=\"upload_content\">\n         <Button \n         onClick={() => fileInputRef.current.click()} \n         startIcon={<AddAPhotoIcon /> } \n         className = {classes.button}\n         color = \"primary\"\n         variant=\"contained\"\n         >\n             Upload Image\n         </Button> \n        <input type=\"file\" onChange={handleChange} hidden ref={fileInputRef} />\n        \n\n        <Button variant=\"contained\" onClick={handleUpload} color=\"secondary\"          className = {classes.button}>\n          Create Post\n        </Button>\n      </div>\n\n      <br />\n\n      <p style={{ color: \"red\" }}>{error}</p>\n      {progress > 0 ? <center><progress value={progress} max=\"100\" /></center> : \"\"}\n    </div>\n  );\n\n}\n//export default ImageUpload;\n","/Users/adityanayak/myproject/src/Suggested.js",["58","59","60","61","62","63"],"/Users/adityanayak/myproject/src/serviceWorker.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":152,"column":17,"nodeType":"70","endLine":152,"endColumn":45},{"ruleId":"68","severity":1,"message":"69","line":195,"column":17,"nodeType":"70","endLine":195,"endColumn":45},{"ruleId":"71","severity":1,"message":"72","line":31,"column":7,"nodeType":"73","endLine":31,"endColumn":64},{"ruleId":"68","severity":1,"message":"69","line":61,"column":11,"nodeType":"70","endLine":61,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":75,"column":9,"nodeType":"76","messageId":"77","endLine":75,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":97,"column":7,"nodeType":"73","endLine":97,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":32,"column":11,"nodeType":"70","endLine":32,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":42,"column":11,"nodeType":"70","endLine":42,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":52,"column":11,"nodeType":"70","endLine":52,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":62,"column":11,"nodeType":"70","endLine":62,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":72,"column":11,"nodeType":"70","endLine":72,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":82,"column":11,"nodeType":"70","endLine":82,"endColumn":36},{"ruleId":"74","severity":1,"message":"78","line":25,"column":10,"nodeType":"76","messageId":"77","endLine":25,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":103,"column":11,"nodeType":"70","endLine":103,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":43,"column":11,"nodeType":"70","endLine":43,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":66,"column":11,"nodeType":"70","endLine":66,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":90,"column":11,"nodeType":"70","endLine":90,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":113,"column":11,"nodeType":"70","endLine":113,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":136,"column":11,"nodeType":"70","endLine":136,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":160,"column":11,"nodeType":"70","endLine":160,"endColumn":36},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'randomAvatar' is assigned a value but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]